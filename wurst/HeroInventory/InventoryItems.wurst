package InventoryItems
    import Unit2
    
    /*
    Slot numbers
    0 1
    2 3
    4 5
    */
    public constant integer SLOT_TOP_LEFT = 0
    public constant integer SLOT_TOP_RIGHT = 1
    public constant integer SLOT_MIDDLE_LEFT = 2
    public constant integer SLOT_MIDDLE_RIGHT = 3
    public constant integer SLOT_BOTTOM_LEFT = 4
    public constant integer SLOT_BOTTOM_RIGHT = 5

    // TODO check slots
    // TODO abstract item x slot
    public class InventoryItems
        private int array[6] items

        function saveFromUnit(unit u)
            for int i = 0 to 5
                items[i] = u.getItemInSlot(i).getTypeId()

        function fillIntoUnit(unit u)
            for int i = 0 to 5
                u.addItemInSlot(items[i], i)

        // Tries to add an item
        // Returns the slot or -1 if it fails
        function addItem(int itm) returns int
            for int i = 0 to 5
                if (items[i] == 0)
                    items[i] = itm
                    return i
            return -1

        function getItemInSlot(int slot) returns int
            return items[slot]

        function setItemInSlot(int itemId, int slot)
            items[slot] = itemId

        function clear()
            for i = 0 to 5
                items[i] = 0

        // Returns the slot of the item of type that has been moved or -1
        function findMissingItem(int itm, InventoryItems newState) returns int
            for i = 0 to 5
                if items[i] == itm and newState.getItemInSlot(i) == 0
                    return i
            return -1